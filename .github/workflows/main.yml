 name: .NET CI/CD Pipeline

 on:
   push:
     branches:
       - master
   pull_request:
     branches:
       - master

 jobs:
   build-and-test:
     name: Build and Test
     runs-on: ubuntu-latest
     
     steps:
       # Step 1: Checkout the code
       - name: Checkout code
         uses: actions/checkout@v3

       # Step 2: Setup Chrome for Selenium
       - name: Setup Chrome
         uses: browser-actions/setup-chrome@latest

       # Step 3: Set up .NET
       - name: Set up .NET
         uses: actions/setup-dotnet@v3
         with:
           dotnet-version: 8.0.x

       # Step 4: Restore dependencies
       - name: Restore dependencies
         run: dotnet restore
         
       # Step 5: Install matching ChromeDriver
       - name: Install ChromeDriver matching Chrome version
         run: |
           CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f 1)
           echo "Chrome version: $CHROME_VERSION"
           dotnet add package Selenium.WebDriver.ChromeDriver -v $CHROME_VERSION.*

       # Step 6: Build the project
       - name: Build the project
         run: dotnet build --configuration Release

       # Step 7: Run tests with headless Chrome
       - name: Run tests
         run: dotnet test --configuration Release
         env:
           HEADLESS: 'true'  # Environment variable for running Chrome in headless mode

       # Step 8: Upload test results
       - name: Upload test results
         if: always()
         uses: actions/upload-artifact@v4
         with:
           name: test-results
           path: "**/TestResults/*.trx"
           retention-days: 5

   # Deploy job remains the same
   deploy:
     name: Deploy
     runs-on: ubuntu-latest
     needs: build-and-test
     if: github.ref == 'refs/heads/master'

     steps:
       # Step 1: Checkout the code
       - name: Checkout code
         uses: actions/checkout@v3

       # Step 2: Deploy (placeholder for deployment steps)
       - name: Deploy application
         run: echo "Add your deployment steps here (e.g., Azure, AWS, or other platforms)"
